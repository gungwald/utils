#!/bin/sh
//usr/bin/true; PGMDIR=`dirname "$0"`
//usr/bin/true; LIBDIR=`dirname "$PGMDIR"`/lib
//usr/bin/true; BSHJAR=`ls "$LIBDIR"/bsh*.jar | tail -1` || exit $?
//usr/bin/true; exec java -classpath "$BSHJAR" bsh.Interpreter "$0" "$@"

// ***************************************************************
// mvn-create-jar-project.sh is preferred over this script because
// the Java program is easier to develop in an IDE and it runs
// faster than BeanShell or Groovy... Also this script is not as
// up-to-date.
// ***************************************************************

// BeanShell script to run Maven to create a JAR project.
//
// This script requires BeanShell. Install it using the command appropriate to your 
// system:
//
//      Fedora: sudo dnf install bsh
//      RHEL:   sudo yum install bsh
//      Debyan: sudo apt install bsh
//      Windows:git clone https://github.com/gungwald/bsh.git; install.bat

final int EXIT_SUCCESS = 0;
final int EXIT_FAILURE = 1;

int exitCode = EXIT_SUCCESS;

try 
{
    BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in));

    print("Enter groupId (example: com.companyname.groupname): ");
    String group = stdin.readLine();

    print("Enter artifactId (example: my-component-name): ");
    String artifact = stdin.readLine();

    String[] cmd = new String[]
    {
            "mvn", 
            "archetype:generate",
            "-DgroupId=" + group,
            "-DartifactId=" + artifact,
            "-DarchetypeArtifactId=maven-archetype-quickstart",
            "-DinteractiveMode=false"
    };
    exitCode = new ProcessBuilder(cmd).inheritIO().start().waitFor();
} 
catch (Exception e) 
{
    print(e.getLocalizedMessage());
    exitCode = EXIT_FAILURE;
}

System.exit(exitCode);

